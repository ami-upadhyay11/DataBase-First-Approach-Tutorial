//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseFirstDemo2017
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UniContextEntities : DbContext
    {
        public UniContextEntities()
            : base("name=UniContextEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Enrollment> Enrollments { get; set; }
        public virtual DbSet<StudentByID> StudentByIDs { get; set; }
        public virtual DbSet<TotalStudent> TotalStudents { get; set; }
        public virtual DbSet<StudentGrade> StudentGrades { get; set; }
    
        public virtual ObjectResult<GetSudentGrade_Result> GetSudentGrade(Nullable<int> studentID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSudentGrade_Result>("GetSudentGrade", studentIDParameter);
        }
    
        [DbFunction("UniContextEntities", "GetStudentGradesForCourse")]
        public virtual IQueryable<GetStudentGradesForCourse_Result> GetStudentGradesForCourse(Nullable<int> courseID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("CourseID", courseID) :
                new ObjectParameter("CourseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetStudentGradesForCourse_Result>("[UniContextEntities].[GetStudentGradesForCourse](@CourseID)", courseIDParameter);
        }
    }
}
